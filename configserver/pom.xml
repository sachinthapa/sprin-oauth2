<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.outlet</groupId>
    <artifactId>configserver</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>Configuration Server</name>
    <description>Configuration Server</description>

    <properties>
        <java.version>17</java.version>
        <spring-boot.skip>true</spring-boot.skip>
        <docker.image.prefix>ostock</docker.image.prefix>
        <spring-cloud.version>2025.0.0</spring-cloud.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <layers>
                        <enabled>true</enabled>
                        <configuration>${project.basedir}/layers.xml</configuration>
                    </layers>
<!--                    when you want to run the app locally-->
<!--                    mvn spring-boot:run -Dspring-boot.skip=false-->
                    <skip>${spring-boot.skip}</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/libs
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.4.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>libs/</classpathPrefix>
                            <mainClass>com.outlet.configserver.ConfigurationServerApplication</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- This plugin is used to create a docker image and publish the image to docker hub-->
            <!--			<plugin>-->
            <!--				<groupId>com.spotify</groupId>-->
            <!--				<artifactId>dockerfile-maven-plugin</artifactId>-->
            <!--				<version>1.4.13</version>-->
            <!--				<configuration>-->
            <!--					<repository>${docker.image.prefix}/${project.artifactId}</repository>-->
            <!--	                <tag>${project.version}</tag>-->
            <!--					<buildArgs>-->
            <!--						<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>-->
            <!--					</buildArgs>-->
            <!--				</configuration>-->
            <!--				<executions>-->
            <!--					<execution>-->
            <!--						<id>default</id>-->
            <!--						<phase>install</phase>-->
            <!--						<goals>-->
            <!--							<goal>build</goal>-->
            <!--							<goal>push</goal>-->
            <!--						</goals>-->
            <!--					</execution>-->
            <!--				</executions>-->
            <!--			</plugin>-->
        </plugins>
    </build>

</project>
